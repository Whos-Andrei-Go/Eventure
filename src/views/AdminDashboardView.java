/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import controllers.AdminDashboardController;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.*;
import models.Event;
import models.Ticket;
import models.TicketType;
import utility.Session;
import views.*;
import views.shared.components.pnlAdminStat;
import views.shared.components.pnlEvent;

/**
 *
 * @author andre
 */
public class AdminDashboardView extends BaseView {

    /**
     * Creates new form DashboardView
     */
    
    private AdminDashboardController adminDashboardController;
    
    public AdminDashboardView() {
        initComponents();
        startClock();
        refreshData();
    }
    
    public void startClock(){
        Thread ct = new Thread(() -> {
            try {
                while (true) {
                    Calendar cal = new GregorianCalendar();
                    int hour = cal.get(Calendar.HOUR_OF_DAY);
                    int minute = cal.get(Calendar.MINUTE);
                    int second = cal.get(Calendar.SECOND);

                    SwingUtilities.invokeLater(() -> {
                        lblClock.setText(String.format("%02d:%02d:%02d", hour, minute, second));
                    });

                    Thread.sleep(1000);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        
        ct.start();
    }
    
    @Override
    public void refreshData(){
        if (this.adminDashboardController == null){
            adminDashboardController = new AdminDashboardController(db);
        }
        
        loadStatistics();
        adjustViewSize(Session.getCurrentUser().getRole());
    }
    
    public void adjustViewSize(String role){
        
    }

    public void loadStatistics() {
        // Panel 1: Total Tickets Sold
        pnlAdminStat totalTicketsSold = new pnlAdminStat("Total Tickets Sold", String.valueOf(adminDashboardController.getTotalTicketsSold()));
        addPanel(totalTicketsSold);

        // Panel 2: Total Revenue
        pnlAdminStat totalRevenue = new pnlAdminStat("Total Revenue", "PHP " + String.valueOf(adminDashboardController.getTotalRevenue()));
        addPanel(totalRevenue);

        // Panel 3: Upcoming Events
        pnlAdminStat upcomingEvents = new pnlAdminStat("Upcoming Events", String.valueOf(adminDashboardController.getUpcomingEventsCount()));
        addPanel(upcomingEvents);

        // Panel 4: Top Selling Event
        pnlAdminStat topSellingEvent = new pnlAdminStat("Top Selling Event", adminDashboardController.getTopSellingEventName());
        addPanel(topSellingEvent);

        // Panel 5: Total Registered Users
        pnlAdminStat totalRegisteredUsers = new pnlAdminStat("Total Registered Users", String.valueOf(adminDashboardController.getTotalRegisteredUsers()));
        addPanel(totalRegisteredUsers);
    }

    private void addPanel(pnlAdminStat panel) {
        // Create a new panel container
        JPanel panelContainer = new JPanel();
        panelContainer.setLayout(new BorderLayout());
        panelContainer.add(panel, BorderLayout.CENTER);
        panelContainer.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Add the panel to the dashboard
        pnlStatistics.add(panelContainer);
        pnlStatistics.revalidate();
        pnlStatistics.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrlMain = new javax.swing.JScrollPane();
        pnlMain = new javax.swing.JPanel();
        hdrMain = new javax.swing.JLabel();
        lblClock = new javax.swing.JLabel();
        pnlStatistics = new javax.swing.JPanel();
        pnlNavBarAdmin1 = new views.shared.components.pnlNavBarAdmin();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eventure - Admin Dashboard");
        setResizable(false);

        pnlMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        pnlMain.setPreferredSize(new java.awt.Dimension(1280, 1420));

        hdrMain.setFont(new java.awt.Font("Riffic Free Medium", 0, 64)); // NOI18N
        hdrMain.setText("DASHBOARD");
        hdrMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        hdrMain.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblClock.setFont(new java.awt.Font("Riffic Free Medium", 0, 48)); // NOI18N
        lblClock.setText("00:00:00");

        pnlStatistics.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 0));
        pnlStatistics.setPreferredSize(new java.awt.Dimension(127, 300));
        pnlStatistics.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlStatistics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(0, 963, Short.MAX_VALUE)
                        .addComponent(lblClock)))
                .addGap(48, 48, 48))
            .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlMainLayout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(hdrMain)
                    .addContainerGap(789, Short.MAX_VALUE)))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblClock)
                .addGap(50, 50, 50)
                .addComponent(pnlStatistics, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
            .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlMainLayout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(hdrMain, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(861, Short.MAX_VALUE)))
        );

        scrlMain.setViewportView(pnlMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlNavBarAdmin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlNavBarAdmin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(scrlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboardView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
          
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboardView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hdrMain;
    private javax.swing.JLabel lblClock;
    private javax.swing.JPanel pnlMain;
    private views.shared.components.pnlNavBarAdmin pnlNavBarAdmin1;
    private javax.swing.JPanel pnlStatistics;
    private javax.swing.JScrollPane scrlMain;
    // End of variables declaration//GEN-END:variables
}
